1.Почему использование тестовых заглушек может быть полезным при написании модульных тестов?

Тестовые заглушки передаются тестируемой системе вместо реальных зависимостей, настройка и сопровождение которых могут быть сопряжены с определёнными сложностями.
Используя заглушки, мы получаем тест, который проверяет тестируемую систему без зависимостей, мешающих его работе.
Тестовые заглушки позволяют изолировать тестируемый модуль от других зависимостей, это упрощает обнаружение и устранение ошибок.
Заглушки могут заменить сложные или медленные части кода, что ускоряет выполнение тестов и позволяет быстрее получать результаты. Заглушками можно заменить код, который
сложно или невозможно протестировать напрямую, что позволяет улучшить покрытие тестами и выявить больше потенциальных ошибок.

2. Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?

Следует использовать Mock-объект который представляет собой конкретную фиктивную реализацию интерфейса, предназначенную исключительно для тестирования взаимодействия и относительно которого высказывается утверждение.

3. Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?

Stab - такие заглушки позволяют тесту управлять опосредованным вводом тестируемой
системы и провоцировать выполнение ветвей кода, которые в других условиях не выполняются.

4. Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных?

Замена тяжеловесного внешнего зависимого объекта легковесной реализацией - это заглушка fake.
Примеры — эмулятор для конкретного приложения БД в памяти (fake database) или эмулятор веб-сервиса.